# Lightweight Dockerfile
FROM node:18-alpine

# Install nginx
RUN apk add --no-cache nginx

# Set working directory
WORKDIR /app

# Copy everything at once
COPY . .

# Install dependencies and fix date-fns version
RUN npm install --legacy-peer-deps && \
    npm install stylis stylis-plugin-rtl --legacy-peer-deps && \
    npm install date-fns@^2.30.0 --legacy-peer-deps

# Build only main app (lightweight)
RUN npx nx build main -c production && \
    npx nx export main -c production

# Copy built files to nginx
# (make sure the nginx web root exists first)
RUN mkdir -p /var/www/html && \
    cp -r dist/apps/main/exported/* /var/www/html/

# Create nginx config
RUN echo 'server { \
    listen 80; \
    server_name _; \
    root /var/www/html; \
    index index.html; \
    location / { \
        try_files \$uri \$uri/ /index.html; \
    } \
    location /api/ { \
        proxy_pass http://94.101.178.233:3030/; \
        proxy_set_header Host \$host; \
        proxy_set_header X-Real-IP \$remote_addr; \
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for; \
        proxy_set_header X-Forwarded-Proto \$scheme; \
    } \
}' > /etc/nginx/nginx.conf

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
