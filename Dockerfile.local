############################
# Stage 1 - Build static export with Node
############################
FROM node:18-alpine AS builder

WORKDIR /app

COPY package.json package-lock.json nx.json angular.json ./
COPY apps ./apps
COPY libs ./libs

RUN npm install --legacy-peer-deps && \
    npm install stylis stylis-plugin-rtl --legacy-peer-deps && \
    npm install date-fns@^2.30.0 --legacy-peer-deps

RUN npx nx build main -c production && \
    npx nx export main -c production


############################
# Stage 2 - Nginx runtime only
############################
FROM alpine:3.19

RUN apk add --no-cache nginx

RUN mkdir -p /var/www/html && mkdir -p /run/nginx

COPY --from=builder /app/dist/apps/main/exported/ /var/www/html/

RUN echo "server { \
    listen 80; \
    server_name _; \
    root /var/www/html; \
    index index.html; \
    location / { \
        try_files \$uri \$uri/ /index.html; \
    } \
    location /api/ { \
        proxy_pass http://94.101.178.233:3030/; \
        proxy_set_header Host \$host; \
        proxy_set_header X-Real-IP \$remote_addr; \
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for; \
        proxy_set_header X-Forwarded-Proto \$scheme; \
    } \
}" > /etc/nginx/http.d/default.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]
